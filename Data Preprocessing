# Outlier
st <- data.frame(state.x77)
boxplot(st$Income)
boxplot.stats(st$Income)$out # boxplot outlier값 출력

out.val <- boxplot.stats(st$Income)$out
st$Income[st$Income %in% out.val] = NA # %in% >> 뒤 값 안에 있는가?
st$Income
newdata <- st[complete.cases(st),]
head(newdata)

# Order, Sort
v1 <- c(1, 7, 6, 8, 4, 2, 3)
order(v1) # order >> index 등수 표시
v1 <- sort(v1)
v1
v2 <- sort(v1, decreasing = T)
v2

head(iris)
order(iris$Sepal.Length)
iris[order(iris$Sepal.Length),]

iris[order(iris$Sepal.Length, decreasing = T),]
iris[order(iris$Species, iris$Sepal.Length),]

v3 <- c(1, 7, 2, 5)
order(v3)
rank(v3)

# Split
sp <- split(iris, iris$Species)
sp
summary(sp)
class(sp)
sp$setosa

# Subset
subset(iris, Species == 'setosa')
subset(iris, Sepal.Length > 5.1)
subset(iris, Sepal.Length > 5.1 & Sepal.Width > 3.9)
subset(iris, Sepal.Length > 5.1,
       select = c(Petal.Length, Petal.Width))

# Which
x <- c(3, 1, 7, 8, 5, 9, 4)
which(x > 5)
which(iris$Species == 'setosa')
which.max(iris$Sepal.Length)
which.min(iris$Sepal.Width)

# Sampling
x <- 1:100
y <- sample(x, size = 10, replace = FALSE) # x에서 10개를 임의 추출
y

idx <- sample(nrow(iris), size = 50, replace = FALSE)
iris.50 <- iris[idx, ]
head(iris.50)

# Combination
combn(5, 3)

x <- c('red', 'green', 'blue', 'black', 'white')
com <- combn(x, 2)
com
for (i in 1:ncol(com)) {
  cat(com[, i], '\n')
}

# Aggregate
agg <- aggregate(iris[, -5], by = list(iris$Species), FUN = mean)
agg

agg <- aggregate(iris[, -5], by = list(iris$Species), FUN = sd)
agg

head(mtcars)
agg <- aggregate(mtcars, by = list(cyl=mtcars$cyl, vs=mtcars$vs), max)
agg

# Attach, Detach
attach(mtcars)
~~~~
detach

# Merge
x <- data.frame(name = c('a', 'b', 'c'), math = c(90, 80, 40))
y <- data.frame(name = c('a', 'b', 'd'), korean = c(75, 60, 90))
merge(x, y, by = c('name')) # name을 기준으로 merge 이름이 다르면 안함 

merge(x, y, all.x = T) # x는 전부 merge
merge(x, y, all.y = T) # y는 전부 merge
merge(x, y, all = T) # 둘다 merge 빈 값은 NA

